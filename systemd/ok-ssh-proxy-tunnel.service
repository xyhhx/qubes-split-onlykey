# vim: set syn=systemd :
[Unit]
Description=Socket-activation proxy for OK SSH proxy
ConditionUser=!root
ConditionGroup=qubes
ConditionPathExists=%t/qubes-ok-proxy/S.ssh-agent
ConditionPathExists=|/var/run/qubes-service/ok-ssh-proxy
PartOf=ok-ssh-proxy.socket
BindsTo=ok-ssh-proxy.socket
BindsTo=ok-ssh-proxy.service
After=ok-ssh-proxy.socket
After=ok-ssh-proxy.service

[Service]
EnvironmentFile=-%t/qubes-ok-proxy/ok-ssh-proxy.env
EnvironmentFile=-/rw/config/ok-ssh-proxy.env
Environment="SSH_AUTH_SOCK=$OK_SSH_SOCK"
ExecStart=/usr/lib/systemd/systemd-socket-proxyd %t/qubes-ok-proxy/S.ssh-agent

AmbientCapabilities=
CapabilityBoundingSet=
DynamicUser=true
IPAddressDeny=any
KeyringMode=private
LockPersonality=true
MemoryDenyWriteExecute=true
NoNewPrivileges=true
PrivateDevices=true
PrivateMounts=true
PrivateNetwork=true
PrivateTmp=disconnected
PrivateUsers=true
ProcSubset=pid
ProtectClock=true
ProtectControlGroups=true
ProtectHome=true
ProtectHostname=true
ProtectKernelLogs=true
ProtectKernelModules=true
ProtectKernelTunables=true
ProtectProc=invisible
ProtectSystem=strict
RestrictAddressFamilies=AF_UNIX
RestrictNamespaces=true
RestrictRealtime=true
RestrictSUIDSGID=true
RootDirectory=%t/qubes-ok-proxy
SystemCallArchitectures=native
SystemCallFilter=@network-io
TemporaryFilesystem=%t/qubes-ok-proxy
